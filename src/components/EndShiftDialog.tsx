import { useState } from 'react';
import { Dialog, DialogContent, DialogHeader, DialogTitle, DialogFooter } from '@/components/ui/dialog';
import { Button } from '@/components/ui/button';
import { Card, CardContent } from '@/components/ui/card';
import { ShiftReport } from '@/types';
import { sendReportToTelegram } from '@/utils/telegram';
import { useToast } from '@/hooks/use-toast';
import Icon from '@/components/ui/icon';

interface EndShiftDialogProps {
  open: boolean;
  onOpenChange: (open: boolean) => void;
  report: ShiftReport;
  telegramBotToken: string;
  telegramChatId: string;
  onConfirm: () => void;
}

export const EndShiftDialog = ({ open, onOpenChange, report, telegramBotToken, telegramChatId, onConfirm }: EndShiftDialogProps) => {
  const [sending, setSending] = useState(false);
  const { toast } = useToast();

  const handleSendToTelegram = async () => {
    setSending(true);
    try {
      const success = await sendReportToTelegram(report, telegramBotToken, telegramChatId);
      if (success) {
        toast({ title: '‚úÖ –û—Ç—á—ë—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ Telegram' });
        onConfirm();
        onOpenChange(false);
      } else {
        toast({ title: '–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram', variant: 'destructive' });
      }
    } catch (error) {
      toast({ title: error instanceof Error ? error.message : '–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏', variant: 'destructive' });
    } finally {
      setSending(false);
    }
  };

  const handleClose = () => {
    onConfirm();
    onOpenChange(false);
  };

  const duration = report.endTime - report.startTime;
  const hours = Math.floor(duration / 3600000);
  const minutes = Math.floor((duration % 3600000) / 60000);

  return (
    <Dialog open={open} onOpenChange={onOpenChange}>
      <DialogContent className="max-w-2xl">
        <DialogHeader>
          <DialogTitle>–ó–∞–∫—Ä—ã—Ç—å —Å–º–µ–Ω—É?</DialogTitle>
        </DialogHeader>
        
        <Card>
          <CardContent className="p-6 space-y-4">
            <div className="grid grid-cols-2 gap-4">
              <div>
                <p className="text-sm text-muted-foreground">–ö–∞—Å—Å–∏—Ä</p>
                <p className="text-lg font-semibold">{report.cashier}</p>
              </div>
              <div>
                <p className="text-sm text-muted-foreground">–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Å–º–µ–Ω—ã</p>
                <p className="text-lg font-semibold">{hours}—á {minutes}–º–∏–Ω</p>
              </div>
            </div>

            <div className="border-t pt-4">
              <div className="grid grid-cols-3 gap-4">
                <div>
                  <p className="text-sm text-muted-foreground">–í—ã—Ä—É—á–∫–∞</p>
                  <p className="text-2xl font-bold text-primary">{report.totalRevenue} ‚ÇΩ</p>
                </div>
                <div>
                  <p className="text-sm text-muted-foreground">üíµ –ù–∞–ª–∏—á–Ω—ã–µ</p>
                  <p className="text-xl font-semibold">{report.cashRevenue} ‚ÇΩ</p>
                </div>
                <div>
                  <p className="text-sm text-muted-foreground">üí≥ –ö–∞—Ä—Ç–∞</p>
                  <p className="text-xl font-semibold">{report.cardRevenue} ‚ÇΩ</p>
                </div>
              </div>
            </div>

            <div className="border-t pt-4">
              <div className="grid grid-cols-2 gap-4">
                <div>
                  <p className="text-sm text-muted-foreground">–ü—Ä–æ–¥–∞–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤</p>
                  <p className="text-lg font-semibold">{report.totalItems} —à—Ç</p>
                </div>
                <div>
                  <p className="text-sm text-muted-foreground">–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–¥–∞–∂</p>
                  <p className="text-lg font-semibold">{report.sales.length}</p>
                </div>
              </div>
            </div>
          </CardContent>
        </Card>

        <div className="bg-muted/30 p-4 rounded-lg">
          <p className="text-sm font-medium mb-3">–û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç—á—ë—Ç –≤ Telegram?</p>
          <div className="flex gap-2">
            <Button
              onClick={handleSendToTelegram}
              disabled={sending || !telegramBotToken || !telegramChatId}
              className="flex-1"
            >
              <Icon name="Send" size={16} className="mr-2" />
              {sending ? '–û—Ç–ø—Ä–∞–≤–∫–∞...' : '–û—Ç–ø—Ä–∞–≤–∏—Ç—å'}
            </Button>
            <Button variant="outline" onClick={handleClose} className="flex-1">
              <Icon name="X" size={16} className="mr-2" />
              –ó–∞–∫—Ä—ã—Ç—å –±–µ–∑ –æ—Ç–ø—Ä–∞–≤–∫–∏
            </Button>
          </div>
          {!telegramBotToken || !telegramChatId ? (
            <p className="text-xs text-muted-foreground mt-2">
              ‚ö†Ô∏è –ù–∞—Å—Ç—Ä–æ–π—Ç–µ Telegram –≤ —Ä–∞–∑–¥–µ–ª–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
            </p>
          ) : null}
        </div>
      </DialogContent>
    </Dialog>
  );
};
